apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: opentelemetry
data:
  otel-collector-config.yaml: |
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

      # Prometheus receiver for scraping metrics
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 10s
              static_configs:
                - targets: ['localhost:8888']

    processors:
      # Batch processor optimizes performance
      batch:
        timeout: 10s
        send_batch_size: 1024

      # Memory limiter prevents OOM
      memory_limiter:
        check_interval: 1s
        limit_mib: 512
        spike_limit_mib: 128

    exporters:
      # Export traces to Tempo
      otlp/tempo:
        endpoint: tempo.observability:4317
        tls:
          insecure: true

      # Export logs to Loki
      loki:
        endpoint: http://loki.observability:3100/loki/api/v1/push

      # Export metrics to Prometheus (via remote write)
      prometheusremotewrite:
        endpoint: http://prometheus.monitoring:9090/api/v1/write
        tls:
          insecure: true

      # Logging exporter for debugging
      logging:
        loglevel: info

    service:
      extensions: [health_check]

      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [otlp/tempo, logging]

        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [loki, logging]

        metrics:
          receivers: [otlp, prometheus]
          processors: [memory_limiter, batch]
          exporters: [prometheusremotewrite, logging]

      telemetry:
        logs:
          level: info
        metrics:
          address: 0.0.0.0:8888
